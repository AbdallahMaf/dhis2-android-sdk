/*
 * Copyright (c) 2016, University of Oslo
 *
 * All rights reserved.
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 * Redistributions of source code must retain the above copyright notice, this
 * list of conditions and the following disclaimer.
 *
 * Redistributions in binary form must reproduce the above copyright notice,
 * this list of conditions and the following disclaimer in the documentation
 * and/or other materials provided with the distribution.
 * Neither the name of the HISP project nor the names of its contributors may
 * be used to endorse or promote products derived from this software without
 * specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
 * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
 * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

apply plugin: "com.android.library"

def configuration = rootProject.ext.configuration
def libraries = rootProject.ext.libraries

android {
    compileSdkVersion configuration.targetSdkVersion
    buildToolsVersion configuration.buildToolsVersion

    defaultConfig {
        minSdkVersion configuration.minSdkVersion
        targetSdkVersion configuration.targetSdkVersion
        versionCode configuration.versionCode
        versionName configuration.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    packagingOptions {
        // excluding duplicate license files
        // from jackson modules
        exclude "META-INF/LICENSE"

        // should be removed with interoperability library
        exclude "META-INF/rxjava.properties"
    }

    lintOptions {
        warningsAsErrors true
        abortOnError true // Fail early.
    }
}

// Check if the build requires dex count, if yes analyze dex for amount of methods
def withDexCount = project.hasProperty("withDexCount")
if (withDexCount) {
    apply plugin: "com.getkeepsafe.dexcount"

    dexcount {
        format = "list"
        verbose = false
        includeFieldCount = true
        includeTotalMethodCount = true
        maxTreeDepth = Integer.MAX_VALUE
    }
}

dependencies {
    // Client models
    compile project(":models")

    // Support libraries
    compile "com.android.support:support-annotations:${libraries.support}"

    // Google's auto-value. Annotations are used only during compilation time, as well as
    // annotation processor which hoops up into compilation process
    provided "com.google.auto.value:auto-value:${libraries.autovalue}"
    annotationProcessor "com.google.auto.value:auto-value:${libraries.autovalue}"

    // Extension which generates mappers for work with cursor and content values
    compile "com.gabrielittner.auto.value:auto-value-cursor-annotations:${libraries.autovaluecursor}"
    annotationProcessor "com.gabrielittner.auto.value:auto-value-cursor:${libraries.autovaluecursor}"

    // Java test dependencies
    testCompile "junit:junit:${libraries.junit}"
    testCompile "org.mockito:mockito-core:${libraries.mockito}"
    testCompile "org.assertj:assertj-core:${libraries.assertj}"
    testCompile "nl.jqno.equalsverifier:equalsverifier:${libraries.equalsverifier}"

    // Android test dependencies
    androidTestCompile "org.mockito:mockito-core:${libraries.mockito}"
    androidTestCompile "com.android.support.test:runner:${libraries.testrunner}"
    androidTestCompile("com.google.truth:truth:${libraries.truth}") {
        exclude group: 'junit' // Android has JUnit built in.
    }
}
